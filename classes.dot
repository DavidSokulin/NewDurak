digraph "classes" {
rankdir=BT
charset="utf-8"
"NewDurak.MinMax.AI" [color="black", fontcolor="black", label="{AI|\l|evaluate(gamestate)\lget_available_moves_comp(gamestate)\lget_available_moves_player(gamestate)\lmax_play(gamestate, level)\lmin_play(gamestate, level)\lminimax(gamestate, level)\lnext_state_comp(gamestate, move, turn)\lnext_state_player(gamestate, move, turn)\lpossible_moves(gamestate)\lupdate_state(gamestate, move)\lwon(gamestate, turn, bn)\l}", shape="record", style="solid"];
"NewDurak.Card.Card" [color="black", fontcolor="black", label="{Card|border : tuple\ldo_rotation : bool\ldo_scale : bool\ldo_translation : bool\lindex : int\lkind : int\lorigin : int\lrotation : int\lscale : float\lvalue : int\lx : int\ly : int\l|comp_card(y)\lget_name()\lhide_cards()\lon_touch_down(touch)\lon_touch_up(touch)\lunhide_cards()\l}", shape="record", style="solid"];
"NewDurak.CompressCard.CompressCard" [color="black", fontcolor="black", label="{CompressCard|index\lkind : int\lorigin\lvalue : int\l|}", shape="record", style="solid"];
"NewDurak.Game.DurakApp" [color="black", fontcolor="black", label="{DurakApp|\l|build()\l}", shape="record", style="solid"];
"NewDurak.EarlyGame.EarlyGame" [color="black", fontcolor="black", label="{EarlyGame|best_move : list\lindex : int\lpos_moves : list\lpos_plays : list\lstate\l|attack_move()\lattack_value()\lbita_value()\ldefend_move()\ldefend_value()\ldetermine_best_move()\lhand_value(state)\lpossible_moves()\lpossible_plays()\ltake_value()\lupdate_state(move)\l}", shape="record", style="solid"];
"NewDurak.Game.Game" [color="black", fontcolor="black", label="{Game|added : int\ladding : bool\lattacker : bool\lback_card\lboard : list\lbottom_card\lcall_count : int\lcard_list : list\lcomp : list\ldeck : list\lkoser : int\lmax_attack : int\lnot_in_game : list\lplayer : list\lturn : bool\lupd : bool\l|after_turn()\lbita()\lbita_ply(touch)\lchange_turn()\lcomp_after_turn()\lcomp_bita_popup()\lcomp_durak()\lcomp_take_popup()\lcomputer()\lcreate_buttons()\lcreate_cards()\lcreate_deck()\ldisp_koser()\ldistance(length)\ldistribute_cards()\lfind_move()\lfind_origin_by_y(y)\lfind_y_by_origin(origin, index)\lfirst_attacker()\lfirst_card_loc(length)\lgame_starter()\lhide_comp()\linstructions_popup()\llegal()\lmax_attack_update()\lmove(cur_play, selected)\lplayer_after_turn()\lplayer_durak()\lpopup_comp_first()\lpopup_invalid()\lpopup_player_first()\lrevert(lis, origin)\lrun()\lset_koser()\lsort()\ltake(lis, pl, bit)\ltake_ply(touch)\lupdate(org_list, new_list, index, org_y)\lupdate_all_loc()\lupdate_board_loc()\lupdate_index(lis)\lupdate_lists(org_list, new_list, index)\lupdate_loc(lis, cor_y)\lupdate_origin(lis, origin)\lwin()\l}", shape="record", style="solid"];
"NewDurak.State.State" [color="black", fontcolor="black", label="{State|attacker\lcomp_hand : list\lcompressed_bita : list\lcompressed_board : list\ldeck\lkoser\lkoser_card\lplayer_hand : list\lturn\l|build_bita(bita)\lbuild_board(board)\lbuild_comp_hand(comp)\lcreate_koser_card(koser_card)\l}", shape="record", style="solid"];
}
